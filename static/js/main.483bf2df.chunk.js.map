{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","renderer","Renderer","link","href","title","text","setOptions","breaks","ControlledInput","props","state","markdown","this","setState","console","log","className","onClick","id","value","onChange","e","handleChange","target","dangerouslySetInnerHTML","__html","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA+CIA,G,MAAQC,EAAQ,KAChBC,EAAW,IAAIF,EAAOG,SAC1BD,EAASE,KAAO,SAASC,EAAMC,EAAOC,GACpC,MAAM,WAAN,OAAkBF,EAAlB,4BAA0CE,EAA1C,SAGFP,EAAOQ,WAAW,CAChBN,WACAO,QAAQ,I,IA0CKC,E,kDArCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAM,CACTC,SA7DY,g+BA0DE,E,yDAOLA,GACXC,KAAKC,SAAS,CACZF,e,+BAGK,IAAD,OACCA,EAAWC,KAAKF,MAAhBC,SAGP,OAFAG,QAAQC,IAAIJ,GAGV,sBAAKK,UAAW,gBAAhB,UACE,oDACA,wBAAQC,QAAS,kBAAK,EAAKJ,SAAS,CAACF,SAAU,MAA/C,wBACA,qBAAKK,UAAU,SAAf,SACE,0BAAUE,GAAG,SAASC,MAAOR,EAC7BS,SAAW,SAACC,GAAD,OAAK,EAAKC,aAAaD,EAAEE,OAAOJ,YAG7C,qBAAKH,UAAU,WAAf,SACE,qBAAKQ,wBAAyB,CAACC,OAAQ3B,EAAOa,IACtCO,GAAG,qB,GA5BSQ,IAAMC,WC/CrBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.483bf2df.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\nconst initialState = `\n  # Markdown Previewer\n  ## Editor\n  ### This is h3 tag\n  #### This is h4 tag\n  ##### This is h5 tag\n  ###### This is h6 tag\n\n  ### what?\n  > This is a Blockquote\n\n  And here is a code, \\`<div>a + b</div>\\`, or \\`npm create-react-app\\` as well.\n\n  ### Even a block code,\n  \\`\\`\\`\n  function addTwoNumbers(a,b){\n    return a + b\n  }\n  \\`\\`\\`\n  ### list items\n  - List item one \n    - list item two\n      - Liset item three\n      \n  ### Text decoration\n  *This is Rendererd in Italics*\n\n  **And this is in Bold text**\n\n  ***Whereas this is both***\n\n  You can see a  [FreeCodeCamp](http://learn.freecodecamp.org \"A non-profit Coding Organization\")\n\n  ### Even an embedded Lion Image\n  ![lion](https://images.all-free-download.com/images/graphiclarge/lion_picture_168819.jpg)\n\n  And if you want Table stuff\n\n  First column | Second column | Third column\n  ------------ | ------------ | ------------ \n  Yes | No | Maybe\n  really | Maybe Yes | Idon't know\n  \n`\n\nlet marked= require(\"marked\")\nvar renderer = new marked.Renderer()\nrenderer.link = function(href, title, text){\n  return `<a href=${href} target=\"_blank\">${text}</a>`;\n}\n\nmarked.setOptions({\n  renderer,\n  breaks: true\n})\n\n\nclass ControlledInput extends React.Component{\n  constructor(props){\n    super(props)\n    this.state={\n      markdown: initialState\n    }\n    // this.handleChange= this.handleChange.bind(this);\n  }\n  handleChange(markdown){\n    this.setState({\n      markdown \n    })\n  } \n  render(){\n    const {markdown}= this.state;\n    console.log(markdown)\n   \n    return(\n      <div className= 'App container'>\n        <h1>Markdown Previewer</h1>\n        <button onClick={()=> this.setState({markdown: \"\"})}>Clear Text</button>\n        <div className=\"editor\">\n          <textarea id='editor' value={markdown} \n          onChange= {(e)=>this.handleChange(e.target.value)} />\n        </div>\n      \n        <div className=\"preview \">\n          <div dangerouslySetInnerHTML={{__html: marked(markdown) }}\n                  id='preview'>\n          </div>\n        </div>\n                \n      </div>  \n\n    )\n  }\n}\n\nexport default ControlledInput;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}